/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * jdfrmConsultaAutores.java
 *
 * Created on 14/01/2011, 18:09:07
 */
package FormsConsulta;

import Classes2.Leitores;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;
import Classes.DB;
import Classes.DocSomenteNumeros;
import Classes.FixedLengthDocument;
import Classes.Query;

/**
 *
 * @author MARK
 */
public class jdfrmConsultaLeitores extends javax.swing.JDialog {

    Leitores leitor;
    private String codigoL;
    private String nomeL;
    public boolean okSelecionado;
    //Modelo implementado da jTable////////////////////////////////////////////
    private TableRowSorter<MkTableModel> sorter;
    private MkTableModel model;

    /** Creates new form jdfrmConsultaAutores */
    public jdfrmConsultaLeitores(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lblMensagem = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        btnCancelarConsulta = new javax.swing.JButton();
        txtConsulta = new javax.swing.JTextField();
        btnTodos = new javax.swing.JButton();
        btnSelecionaRegistro = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        cbFiltro = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Consulta Leitor");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Registros"));
        jPanel6.setPreferredSize(new java.awt.Dimension(609, 227));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(jTable1);

        org.jdesktop.layout.GroupLayout jPanel6Layout = new org.jdesktop.layout.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 595, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel6Layout.createSequentialGroup()
                .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                .addContainerGap())
        );

        lblMensagem.setFont(new java.awt.Font("Tahoma", 0, 14));
        lblMensagem.setForeground(java.awt.Color.blue);
        lblMensagem.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblMensagem.setToolTipText("");

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Consulta"));

        btnCancelarConsulta.setText("Cancelar");
        btnCancelarConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarConsultaActionPerformed(evt);
            }
        });

        txtConsulta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtConsultaKeyReleased(evt);
            }
        });

        btnTodos.setText("Todos");
        btnTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTodosActionPerformed(evt);
            }
        });

        btnSelecionaRegistro.setText("Selecionar registro");
        btnSelecionaRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecionaRegistroActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel7Layout = new org.jdesktop.layout.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(txtConsulta, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 595, Short.MAX_VALUE)
                    .add(jPanel7Layout.createSequentialGroup()
                        .add(btnTodos)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnCancelarConsulta)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnSelecionaRegistro)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .add(txtConsulta, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnCancelarConsulta)
                    .add(btnTodos)
                    .add(btnSelecionaRegistro))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Filtro"));

        cbFiltro.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "CÃ³digo", "Nome do Leitor" }));
        cbFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbFiltroActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(cbFiltro, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 281, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(324, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(cbFiltro, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 625, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, lblMensagem, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 625, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel7, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(lblMensagem, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 31, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-661)/2, (screenSize.height-508)/2, 661, 508);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Atualiza a expressÃ£o regular do filtro da linha da expressÃ£o
     * na caixa de texto. Filtra na jTable quando digita.
     */
    private void newFilter(int coluna) {
        RowFilter<MkTableModel, Object> rf = null;
        //If current expression doesn't parse, don't update.
        try {
            //(?i) para case insensitive
            rf = RowFilter.regexFilter("(?i)" + txtConsulta.getText(), coluna);
        } catch (java.util.regex.PatternSyntaxException e) {
            return;
        }
        sorter.setRowFilter(rf);
    }

/*
 *Pega o cÃ³digo
 */
    public String getCodigo() {
        codigoL = jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 0).toString();
        return codigoL;
    }

/*
 *Pega o Nome
 */    
    public String getNome() {
        nomeL = jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 1).toString();
        return nomeL;
    }

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (jTable1.isRowSelected(jTable1.getSelectedRow())) {
            okSelecionado = true;
        } else {
            okSelecionado = false;
        }
        if (evt.getClickCount() == 2) {
            this.dispose();
        }

    }//GEN-LAST:event_jTable1MouseClicked

    private void btnCancelarConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarConsultaActionPerformed
        //Fechamos a janela diretamente.
        //NÃ£o hÃ¡ necessidade de dizer que o ok nÃ£o foi selecionado.
        okSelecionado = false;
        this.dispose();

}//GEN-LAST:event_btnCancelarConsultaActionPerformed

    private void txtConsultaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtConsultaKeyReleased
        switch (cbFiltro.getSelectedIndex()) {
            case 0:
                //CÃ³digo
                newFilter(0);
                break;
            case 1:
                //Nome do leitor
                newFilter(1);
                break;
        }

        if (jTable1.getRowCount() == 0) {
            lblMensagem.setText("Nenhum registro encontrado !");
        } else {
            lblMensagem.setText(jTable1.getRowCount() + " registro(s) encontrado(s) !");
        }
    }//GEN-LAST:event_txtConsultaKeyReleased

    private void btnTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTodosActionPerformed
        ArrayList dados = new ArrayList();
        String[] colunas = new String[]{"CÃ³digo", "Nome do Leitor"};
        DB banco2 = new DB();
        banco2.connect();
        Query q = new Query(banco2.conn);
        q.open("SELECT * FROM cadleitores");

        //VariÃ¡veis que irÃ£o receber a consulta
        int codigo;
        java.util.Date data_2;
        java.sql.Time hora;
        int categoriadoleitor;
        String nomedoleitor;
        String sexo;
        String estadocivil;
        int idade;
        java.util.Date datadenasc;
        String naturalidade;
        String endereco;
        int nrcasa;
        int uf_iduf;
        int cidade_id;
        String cep;
        int bairro_id;
        String religiao;
        String cpf;
        String rg;
        String telefone;
        String celular;
        String email;
        String instituicao;
        int niveldeescolaridade_id;
        int formacaoacademica_id;
        int tipodeformacao_id;
        int estadoi_id;
        int cidadei_id;
        String turma;
        String serie;
        java.util.Date datadeconclusao;
        String nomedopai;
        String profissaodopai;
        String nomedamae;
        String profissaodamae;
        String nomedoresponsavel;
        String profissaodoleitor;
        String situacao;

        leitor = new Leitores();
        dados = new ArrayList();
        try {
            while (q.next()) {
                codigo = q.rs.getInt("codigo");
                data_2 = q.rs.getDate("data_2");
                hora = q.rs.getTime("hora");
                categoriadoleitor = q.rs.getInt("categoriadoleitor");
                nomedoleitor = q.rs.getString("nomedoleitor");
                sexo = q.rs.getString("sexo");
                estadocivil = q.rs.getString("estadocivil");
                idade = q.rs.getInt("idade");
                datadenasc = q.rs.getDate("datadenasc");
                naturalidade = q.rs.getString("naturalidade");
                endereco = q.rs.getString("endereco");
                nrcasa = q.rs.getInt("nrcasa");
                uf_iduf = q.rs.getInt("uf_iduf");
                cidade_id = q.rs.getInt("cidade_id");
                cep = q.rs.getString("cep");
                bairro_id = q.rs.getInt("bairro_id");
                religiao = q.rs.getString("religiao");
                cpf = q.rs.getString("cpf");
                rg = q.rs.getString("rg");
                telefone = q.rs.getString("telefone");
                celular = q.rs.getString("celular");
                email = q.rs.getString("email");
                instituicao = q.rs.getString("instituicao");
                niveldeescolaridade_id = q.rs.getInt("niveldeescolaridade_id");
                formacaoacademica_id = q.rs.getInt("formacaoacademica_id");
                tipodeformacao_id = q.rs.getInt("tipodeformacao_id");
                estadoi_id = q.rs.getInt("estadoi_id");
                cidadei_id = q.rs.getInt("cidadei_id");
                turma = q.rs.getString("turma");
                serie = q.rs.getString("serie");
                datadeconclusao = q.rs.getDate("datadeconclusao");
                nomedopai = q.rs.getString("nomedopai");
                profissaodopai = q.rs.getString("nomedopai");
                nomedamae = q.rs.getString("nomedamae");
                profissaodamae = q.rs.getString("profissaodamae");
                nomedoresponsavel = q.rs.getString("nomedoresponsavel");
                profissaodoleitor = q.rs.getString("profissaodoleitor");
                situacao = q.rs.getString("situacao");

                //Seta os valores
                leitor.setCodigo(codigo);
                leitor.setData_2(data_2);
                leitor.setHora(hora);
                leitor.setCategoriadoleitor(categoriadoleitor);
                leitor.setNomedoleitor(nomedoleitor);
                leitor.setSexo(sexo);
                leitor.setEstadocivil(estadocivil);
                leitor.setIdade(idade);
                leitor.setDatadenasc(datadenasc);
                leitor.setNaturalidade(naturalidade);
                leitor.setEndereco(endereco);
                leitor.setNrcasa(nrcasa);
                leitor.setUf_iduf(uf_iduf);
                leitor.setCidade_id(cidade_id);
                leitor.setCep(cep);
                leitor.setBairro_id(bairro_id);
                leitor.setReligiao(religiao);
                leitor.setCpf(cpf);
                leitor.setRg(rg);
                leitor.setTelefone(telefone);
                leitor.setCelular(celular);
                leitor.setEmail(email);
                leitor.setInstituicao(instituicao);
                leitor.setNiveldeescolaridade_id(niveldeescolaridade_id);
                leitor.setFormacaoacademica_id(formacaoacademica_id);
                leitor.setTipodeformacao_id(tipodeformacao_id);
                leitor.setEstadoi_id(estadoi_id);
                leitor.setCidadei_id(cidadei_id);
                leitor.setTurma(turma);
                leitor.setSerie(serie);
                leitor.setDatadeconclusao(datadeconclusao);
                leitor.setNomedopai(nomedopai);
                leitor.setProfissaodopai(profissaodopai);
                leitor.setNomedamae(nomedamae);
                leitor.setProfissaodamae(profissaodamae);
                leitor.setNomedoresponsavel(nomedoresponsavel);
                leitor.setProfissaodoleitor(profissaodoleitor);
                leitor.setSituacao(situacao);

                //Colocar os gets para poder funcionar corretamente
                dados.add(new String[]{
                            String.valueOf(leitor.getCodigo()),
                            leitor.getNomedoleitor(),
                            String.valueOf(leitor.getData_2()),
                            String.valueOf(leitor.getHora()),
                            String.valueOf(leitor.getCategoriadoleitor()),
                            leitor.getSexo(),
                            leitor.getEstadocivil(),
                            String.valueOf(leitor.getIdade()),
                            String.valueOf(leitor.getDatadenasc()),
                            leitor.getNaturalidade(),
                            leitor.getEndereco(),
                            String.valueOf(leitor.getNrcasa()),
                            String.valueOf(leitor.getUf_iduf()),
                            String.valueOf(leitor.getCidade_id()),
                            leitor.getCep(),
                            String.valueOf(leitor.getBairro_id()),
                            leitor.getReligiao(),
                            leitor.getCpf(),
                            leitor.getRg(),
                            leitor.getTelefone(),
                            leitor.getCelular(),
                            leitor.getEmail(),
                            leitor.getInstituicao(),
                            String.valueOf(leitor.getNiveldeescolaridade_id()),
                            String.valueOf(leitor.getFormacaoacademica_id()),
                            String.valueOf(leitor.getTipodeformacao_id()),
                            String.valueOf(leitor.getEstadoi_id()),
                            String.valueOf(leitor.getCidadei_id()),
                            leitor.getTurma(),
                            leitor.getSerie(),
                            String.valueOf(leitor.getDatadeconclusao()),
                            leitor.getNomedopai(),
                            leitor.getProfissaodopai(),
                            leitor.getNomedamae(),
                            leitor.getProfissaodamae(),
                            leitor.getNomedoresponsavel(),
                            leitor.getProfissaodoleitor(),
                            leitor.getSituacao()
                        });

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }

        banco2.disconnect();


        boolean[] edicao = {false, false, false};
        model = new MkTableModel(dados, colunas, edicao);
        jTable1.setModel(model);
        sorter = new TableRowSorter<MkTableModel>(model);
        jTable1.setRowSorter(sorter);

//       CÃ³digo,Nome do Leitor
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(100);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(350);

        //=============================
        if (jTable1.getRowCount() == 0) {
            lblMensagem.setText("Nenhum registro encontrado !");
        } else {
            lblMensagem.setText(jTable1.getRowCount() + " registro(s) encontrado(s) !");
        }
}//GEN-LAST:event_btnTodosActionPerformed

    private void btnSelecionaRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecionaRegistroActionPerformed
        if (jTable1.isRowSelected(jTable1.getSelectedRow()) && okSelecionado == true) {
            this.dispose();
        }
}//GEN-LAST:event_btnSelecionaRegistroActionPerformed

    private void cbFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbFiltroActionPerformed
        switch (cbFiltro.getSelectedIndex()) {
            case 0:
                //CÃ³digo/CÃ³digo de barras
                txtConsulta.setDocument(new DocSomenteNumeros());
                break;
            case 1:
                //Nome do Leitor
                txtConsulta.setDocument(new FixedLengthDocument(100));
                break;
        }
    }//GEN-LAST:event_cbFiltroActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        //Coloca o filtro sendo o nome do leitor
        cbFiltro.setSelectedIndex(1);
        btnTodosActionPerformed(null);
    }//GEN-LAST:event_formWindowOpened

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            evt.consume();
            this.dispose();
        }
    }//GEN-LAST:event_jTable1KeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                jdfrmConsultaLeitores dialog = new jdfrmConsultaLeitores(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelarConsulta;
    private javax.swing.JButton btnSelecionaRegistro;
    private javax.swing.JButton btnTodos;
    private javax.swing.JComboBox cbFiltro;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane3;
    public static javax.swing.JTable jTable1;
    private javax.swing.JLabel lblMensagem;
    private javax.swing.JTextField txtConsulta;
    // End of variables declaration//GEN-END:variables
}
