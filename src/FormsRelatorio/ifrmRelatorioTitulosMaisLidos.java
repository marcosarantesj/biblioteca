/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ifrmRelatorioEmprestimos.java
 *
 * Created on 05/04/2011, 10:09:58
 */
package FormsRelatorio;

import FormsConsulta.jdfrmConsultaLeitores;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.HashMap;
import javax.swing.JOptionPane;
import Classes.DB;
import Classes.FixedLengthDocument;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author MARK
 */
public class ifrmRelatorioTitulosMaisLidos extends javax.swing.JInternalFrame {

//    private DB banco;
    /** Creates new form ifrmRelatorioEmprestimos */
    public ifrmRelatorioTitulosMaisLidos() {
        initComponents();
        txtDataInicial.setDocument(new FixedLengthDocument(10));
        txtDataFinal.setDocument(new FixedLengthDocument(10));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        rdPorPeriodo = new javax.swing.JRadioButton();
        rdGeral = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        txtDataInicial = new javax.swing.JTextField();
        txtDataFinal = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnVisualizar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        rdAsc = new javax.swing.JRadioButton();
        rdDesc = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        txtQtd = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        chkTodos = new javax.swing.JCheckBox();
        btnCancelar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Relação dos Títulos Mais Lidos");
        setMaximumSize(new java.awt.Dimension(440, 313));
        setMinimumSize(new java.awt.Dimension(440, 313));
        setPreferredSize(new java.awt.Dimension(440, 313));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Opções de Relatório:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        buttonGroup1.add(rdPorPeriodo);
        rdPorPeriodo.setFont(new java.awt.Font("Tahoma", 0, 14));
        rdPorPeriodo.setText("Por Período");
        rdPorPeriodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdPorPeriodoActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdGeral);
        rdGeral.setFont(new java.awt.Font("Tahoma", 0, 14));
        rdGeral.setText("Geral");
        rdGeral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdGeralActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(rdPorPeriodo)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(rdGeral)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(rdPorPeriodo)
                    .add(rdGeral))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Digite a data inicial e final", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        txtDataInicial.setFont(new java.awt.Font("Tahoma", 0, 14));
        txtDataInicial.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDataInicialKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDataInicialKeyTyped(evt);
            }
        });

        txtDataFinal.setFont(new java.awt.Font("Tahoma", 0, 14));
        txtDataFinal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDataFinalKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDataFinalKeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel1.setText("Data Inicial:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel2.setText("Data Final:");

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(txtDataInicial, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel2)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(txtDataFinal, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(txtDataInicial, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel1)
                    .add(jLabel2)
                    .add(txtDataFinal, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnVisualizar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnVisualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icones/VRelatorio.png"))); // NOI18N
        btnVisualizar.setText("Visualizar");
        btnVisualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVisualizarActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Ordem:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        buttonGroup3.add(rdAsc);
        rdAsc.setFont(new java.awt.Font("Tahoma", 0, 14));
        rdAsc.setText("Ascendente");

        buttonGroup3.add(rdDesc);
        rdDesc.setFont(new java.awt.Font("Tahoma", 0, 14));
        rdDesc.setText("Descendente");

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(rdAsc)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(rdDesc)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(rdAsc)
                    .add(rdDesc))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Quantidade de títulos mostrados", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        txtQtd.setFont(new java.awt.Font("Tahoma", 0, 14));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel3.setText("Quantidade:");

        chkTodos.setFont(new java.awt.Font("Tahoma", 0, 14));
        chkTodos.setText("Todos");
        chkTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkTodosActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel3)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(txtQtd, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(chkTodos)
                .addContainerGap(144, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(txtQtd, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel3)
                    .add(chkTodos))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        btnCancelar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icones/Cancelar.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                        .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(layout.createSequentialGroup()
                            .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(btnCancelar)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnVisualizar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(btnVisualizar)
                    .add(btnCancelar))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-440)/2, (screenSize.height-313)/2, 440, 313);
    }// </editor-fold>//GEN-END:initComponents

//Ler arquivo texto
    private String CaminhodoRelatorio() {
        String caminho = null;
        try {
            FileReader reader = new FileReader(new File("config.txt"));
            BufferedReader leitor = new BufferedReader(reader);

            //Lê linha por linha \n quebra a linha
            leitor.readLine().substring(8);
            leitor.readLine().substring(12);
            caminho = leitor.readLine().substring(12);

            //Fecha a leitura
            reader.close();
            leitor.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Atenção", JOptionPane.WARNING_MESSAGE);
        }
        return caminho;
    }

    private void btnVisualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVisualizarActionPerformed

        DB banco = new DB();
        banco.connect();
        HashMap parametros = new HashMap();
        String sql = null;
        String titulo = null;
        String ordem = null;
        boolean ok = false;

        //Verificação >Ordem:
        if (rdAsc.isSelected()) {
            ordem = "ASC";
        } else {
            ordem = "DESC";
        }
        //verificação Opções de Relatório e limitados em x livros
        if (rdPorPeriodo.isSelected() && chkTodos.isSelected() == false) {
            titulo = "Relação dos " + txtQtd.getText().trim() + " Títulos Mais Lidos no Período de "
                    + txtDataInicial.getText().trim() + " a " + txtDataFinal.getText().trim();
            sql = "SELECT c.titulo,COUNT(dl.cadlivros_id)AS total"
                    + " FROM detalhesmovimento dm,cadlivros c,detalhesdolivro dl"
                    + " WHERE dm.detalhesdolivro_id=dl.iddetalhesdolivro"
                    + " AND dl.cadlivros_id=c.codigo"
                    + " AND dm.situacao='C'"
                    + " AND dm.datadevolvida BETWEEN '" + txtDataInicial.getText().trim()
                    + "' AND '" + txtDataFinal.getText().trim() + "'"
                    + " GROUP BY c.titulo"
                    + " ORDER BY total " + ordem
                    + " LIMIT " + txtQtd.getText().trim();
        } else if (rdGeral.isSelected() && chkTodos.isSelected() == false) {
            //Mostra todos os livros lidos não importando a data e limitado em x livros
            titulo = "Relação Geral dos " + txtQtd.getText().trim() + " Títulos Mais Lidos";
            sql = "SELECT c.titulo,COUNT(dl.cadlivros_id)AS total"
                    + " FROM detalhesmovimento dm,cadlivros c,detalhesdolivro dl"
                    + " WHERE dm.detalhesdolivro_id=dl.iddetalhesdolivro"
                    + " AND dl.cadlivros_id=c.codigo"
                    + " AND dm.situacao='C'"
                    + " GROUP BY c.titulo"
                    + " ORDER BY total " + ordem
                    + " LIMIT " + txtQtd.getText().trim();
        } else if (rdPorPeriodo.isSelected() && chkTodos.isSelected() == true) {
            //sem limite
            titulo = "Relação dos Títulos Mais Lidos no Período de "
                    + txtDataInicial.getText().trim() + " a " + txtDataFinal.getText().trim();
            sql = "SELECT c.titulo,COUNT(dl.cadlivros_id)AS total"
                    + " FROM detalhesmovimento dm,cadlivros c,detalhesdolivro dl"
                    + " WHERE dm.detalhesdolivro_id=dl.iddetalhesdolivro"
                    + " AND dl.cadlivros_id=c.codigo"
                    + " AND dm.situacao='C'"
                    + " AND dm.datadevolvida BETWEEN '" + txtDataInicial.getText().trim()
                    + "' AND '" + txtDataFinal.getText().trim() + "'"
                    + " GROUP BY c.titulo"
                    + " ORDER BY total " + ordem;
        } else if (rdGeral.isSelected() && chkTodos.isSelected() == true) {
            //Mostra todos os livros lidos não importando a data sem limite
            titulo = "Relação Geral dos Títulos Mais Lidos";
            sql = "SELECT c.titulo,COUNT(dl.cadlivros_id)AS total"
                    + " FROM detalhesmovimento dm,cadlivros c,detalhesdolivro dl"
                    + " WHERE dm.detalhesdolivro_id=dl.iddetalhesdolivro"
                    + " AND dl.cadlivros_id=c.codigo"
                    + " AND dm.situacao='C'"
                    + " GROUP BY c.titulo"
                    + " ORDER BY total " + ordem;
        }
//------------------------------------------------------------------------------
//Verificar se os campos estão preenchidos
        if (rdPorPeriodo.isSelected() && chkTodos.isSelected() == false) {
            if (txtDataInicial.getText().trim().equals("") || txtDataInicial.getText().trim().length() < 10) {
                JOptionPane.showMessageDialog(null, "A data inicial não pode ser vazia ou menor que 10 !", "Aviso", JOptionPane.WARNING_MESSAGE);
                txtDataInicial.requestFocus();
            } else if (txtDataFinal.getText().trim().equals("") || txtDataFinal.getText().trim().length() < 10) {
                JOptionPane.showMessageDialog(null, "A data final não pode ser vazia ou menor que 10 !", "Aviso", JOptionPane.WARNING_MESSAGE);
                txtDataFinal.requestFocus();
            } else if (txtQtd.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(null, "Digite a quantidade de títulos que serão mostrados !", "Aviso", JOptionPane.WARNING_MESSAGE);
                txtQtd.requestFocus();
            }
            if (!txtDataInicial.getText().trim().equals("")
                    && txtDataInicial.getText().trim().length() == 10
                    && !txtDataFinal.getText().trim().equals("")
                    && txtDataFinal.getText().trim().length() == 10
                    && !txtQtd.getText().trim().equals("")) {
                //Se estiver tudo preenchido, então o ok=true
                ok = true;
            }

        } else if (rdGeral.isSelected() && chkTodos.isSelected() == false) {
            if (txtQtd.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(null, "Digite a quantidade de títulos que serão mostrados !", "Aviso", JOptionPane.WARNING_MESSAGE);
                txtQtd.requestFocus();
            }
            if (!txtQtd.getText().trim().equals("")) {
                //Se estiver tudo preenchido, então o ok=true
                ok = true;
            }
        } else if (rdPorPeriodo.isSelected() && chkTodos.isSelected() == true) {
            if (txtDataInicial.getText().trim().equals("") || txtDataInicial.getText().trim().length() < 10) {
                JOptionPane.showMessageDialog(null, "A data inicial não pode ser vazia ou menor que 10 !", "Aviso", JOptionPane.WARNING_MESSAGE);
                txtDataInicial.requestFocus();
            } else if (txtDataFinal.getText().trim().equals("") || txtDataFinal.getText().trim().length() < 10) {
                JOptionPane.showMessageDialog(null, "A data final não pode ser vazia ou menor que 10 !", "Aviso", JOptionPane.WARNING_MESSAGE);
                txtDataFinal.requestFocus();
            }
            if (!txtDataInicial.getText().trim().equals("")
                    && txtDataInicial.getText().trim().length() == 10
                    && !txtDataFinal.getText().trim().equals("")
                    && txtDataFinal.getText().trim().length() == 10) {
                //Se estiver tudo preenchido, então o ok=true
                ok = true;
            }
        } else if (rdGeral.isSelected() && chkTodos.isSelected() == true) {
            ok = true;
        }

        if (ok == true) {
            try {
                parametros.put("pSQL", sql);
                parametros.put("pTitulo", titulo);
                //C:\\Users\\MARK\\Documents\\NetBeansProjects\\Login\\Relatorios\\
                JasperPrint jp = JasperFillManager.fillReport(CaminhodoRelatorio() + "RMLE.jasper", parametros, banco.conn);
                JasperViewer jrv = new JasperViewer(jp, false);
                //Para maximizar o relatório
                Toolkit tk = Toolkit.getDefaultToolkit();
                Dimension screenSize = tk.getScreenSize();
                //Maximiza o relatório
                jrv.setSize(screenSize.width, screenSize.height);
                jrv.setLocation(0, 0);
                jrv.setTitle(titulo);
                jrv.setVisible(true);
                jrv.setFitPageZoomRatio();
                banco.disconnect();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro " + e.getMessage(), "Aviso", JOptionPane.WARNING_MESSAGE);
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnVisualizarActionPerformed

    private void txtDataInicialKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDataInicialKeyTyped
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            evt.consume();
        }
    }//GEN-LAST:event_txtDataInicialKeyTyped

    private void txtDataFinalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDataFinalKeyTyped
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            evt.consume();
        }
    }//GEN-LAST:event_txtDataFinalKeyTyped

    private void txtDataInicialKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDataInicialKeyReleased
        switch (txtDataInicial.getText().trim().length()) {
            case 2:
                txtDataInicial.setText(txtDataInicial.getText().trim() + "/");
                break;
            case 5:
                txtDataInicial.setText(txtDataInicial.getText().trim() + "/");
                break;
        }
    }//GEN-LAST:event_txtDataInicialKeyReleased

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        rdPorPeriodo.setSelected(true);
        rdDesc.setSelected(true);
        jLabel1.setVisible(true);
        jLabel2.setVisible(true);
        txtDataInicial.setVisible(true);
        txtDataFinal.setVisible(true);
        txtDataInicial.requestFocus();
    }//GEN-LAST:event_formInternalFrameOpened

    private void txtDataFinalKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDataFinalKeyReleased
        switch (txtDataFinal.getText().trim().length()) {
            case 2:
                txtDataFinal.setText(txtDataFinal.getText().trim() + "/");
                break;
            case 5:
                txtDataFinal.setText(txtDataFinal.getText().trim() + "/");
                break;
        }
    }//GEN-LAST:event_txtDataFinalKeyReleased

    private void rdPorPeriodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdPorPeriodoActionPerformed
        jLabel1.setVisible(true);
        jLabel2.setVisible(true);
        txtDataInicial.setVisible(true);
        txtDataFinal.setVisible(true);
        jPanel2.setVisible(true);
        txtDataInicial.requestFocus();
}//GEN-LAST:event_rdPorPeriodoActionPerformed

    private void rdGeralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdGeralActionPerformed
        jLabel1.setVisible(false);
        jLabel2.setVisible(false);
        txtDataInicial.setVisible(false);
        txtDataFinal.setVisible(false);
        jPanel2.setVisible(false);
    }//GEN-LAST:event_rdGeralActionPerformed

    private void chkTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkTodosActionPerformed
        if (chkTodos.isSelected() == true) {
            jLabel3.setEnabled(false);
            txtQtd.setEnabled(false);
        } else if (chkTodos.isSelected() == false) {
            jLabel3.setEnabled(true);
            txtQtd.setEnabled(true);
        }
    }//GEN-LAST:event_chkTodosActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnVisualizar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JCheckBox chkTodos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JRadioButton rdAsc;
    private javax.swing.JRadioButton rdDesc;
    private javax.swing.JRadioButton rdGeral;
    private javax.swing.JRadioButton rdPorPeriodo;
    private javax.swing.JTextField txtDataFinal;
    private javax.swing.JTextField txtDataInicial;
    private javax.swing.JTextField txtQtd;
    // End of variables declaration//GEN-END:variables
}
