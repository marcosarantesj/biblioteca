/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ifrmImagemdeFundo.java
 *
 * Created on 29/03/2011, 17:40:22
 */
package FormsdeConfiguracao;

import java.io.File;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileSystemView;

/**
 *
 * @author MARK
 */
public class ifrmBackup extends javax.swing.JInternalFrame {

//    private File Nomeimagem;
    private File dirInicial;

    /** Creates new form ifrmImagemdeFundo */
    public ifrmBackup() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtCaminho = new javax.swing.JTextField();
        btnOk = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnProcurar = new javax.swing.JButton();
        lblMensagem = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("Backup");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        txtCaminho.setFont(new java.awt.Font("Tahoma", 0, 14));

        btnOk.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnOk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icones/apply.png"))); // NOI18N
        btnOk.setText("OK");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Tahoma", 0, 14));
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icones/Cancelar.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Digite o caminho do backup ou procure");

        btnProcurar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnProcurar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icones/AbrirArquivo.png"))); // NOI18N
        btnProcurar.setText("Procurar");
        btnProcurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcurarActionPerformed(evt);
            }
        });

        lblMensagem.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblMensagem.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblMensagem.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(txtCaminho, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(lblMensagem, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 257, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnProcurar))
                    .add(jLabel1)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(btnCancelar)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnOk)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(txtCaminho, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(btnProcurar)
                    .add(lblMensagem, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnOk)
                    .add(btnCancelar))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-410)/2, (screenSize.height-175)/2, 410, 175);
    }// </editor-fold>//GEN-END:initComponents

    private void btnProcurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcurarActionPerformed
        javax.swing.JFileChooser jfc = new javax.swing.JFileChooser(new File("Backup/"), FileSystemView.getFileSystemView());
        jfc.setMultiSelectionEnabled(false);
        jfc.setDialogTitle("Selecione o diretório para backup");
//        jfc.setFileFilter(new FileNameExtensionFilter("JPG, GIF e PNG", "jpg", "gif", "png"));
//      this.lblFoto.setText("");
        jfc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int resposta = jfc.showOpenDialog(this);
        if (resposta == 0) {
            dirInicial = jfc.getSelectedFile();
            // se clica em carregar imagem faz isso...
//            img = new ImageIcon(jfc.getSelectedFile().getAbsolutePath()).getImage().getScaledInstance(this.getWidth(), this.getHeight(), Image.SCALE_DEFAULT);
            txtCaminho.setText(dirInicial.getAbsolutePath());
        }
    }//GEN-LAST:event_btnProcurarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        String nomeBackup = null;
        if (!txtCaminho.getText().trim().equals("")) {
            dirInicial = new File(txtCaminho.getText().trim());
            Process p = null;
            if (dirInicial.exists()) {
//------------------------------------------------------------------------------
                try {
                    //Colocar a data e hora do backup
                    java.util.Date data = new java.util.Date();
                    DateFormat df = new SimpleDateFormat("dd-MM-yyyy");
                    DateFormat hf = new SimpleDateFormat("HH.mm.ss");
                    ProcessBuilder pb;
                    //C:/Program Files/PostgreSQL/8.4/bin/pg_dump.exe
                    pb = new ProcessBuilder("pg_dump.exe ",
                            "-i", "-h", "localhost", "-p", "5432", "-U", "postgres", "-F", "c", "-b",
                            "-v", "-f", txtCaminho.getText().trim() + "\\" + "Backup"
                            + df.format(data) + "--" + hf.format(data) + ".backup", "biblioteca");
                    nomeBackup = "Backup" + df.format(data) + "--" + hf.format(data) + ".backup";
                    pb.environment().put("PGPASSWORD", "mark123");
                    pb.redirectErrorStream(true);
                    p = pb.start();
                    lblMensagem.setText("Aguarde...");
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, ex);
                } finally {
                    p.destroy();
                    JOptionPane.showMessageDialog(null, "Backup concluído com sucesso!", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                     lblMensagem.setText(nomeBackup);
                }
//------------------------------------------------------------------------------
            } else {
                JOptionPane.showMessageDialog(null, "O diretório não existe!", "Aviso", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Digite o caminho para o backup "
                    + "ou procure!", "Mensagem", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_btnOkActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        dirInicial = new File("Backup/");
        txtCaminho.setText(dirInicial.getAbsolutePath());
    }//GEN-LAST:event_formInternalFrameOpened
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnOk;
    private javax.swing.JButton btnProcurar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblMensagem;
    private javax.swing.JTextField txtCaminho;
    // End of variables declaration//GEN-END:variables
}
