/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * frmMenu.java
 *
 * Created on 20/08/2010, 23:36:52
 */
package Testes;

import FormsAjuda.ifrmSobreoSistema;
import FormsdeConfiguracao.ifrmImagemdeFundo;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import javax.swing.ImageIcon;
import javax.swing.JInternalFrame;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;

/**
 *
 * @author MARK
 */
public class frmMenuTESTE extends javax.swing.JFrame {
private JMenuItem menuItem;
    //Variaveis para verificar se o relatorio esta aberto
    private boolean abertoRAutores = false;
    private boolean abertoRClasLiteraria = false;
    private boolean abertoREditora = false;
    private boolean abertoRGrupo = false;
//    private boolean abertoRIdioma = false;
    private boolean abertoRLeitor = false;
//    private boolean abertoRCarteirinhaGeral = false;
//PARA A IMAGEM DE FUNDO========================================================
    private Image imagemFundo = null;
    private javax.swing.JLabel lblImagem = new javax.swing.JLabel();
//VERIFICA SE É SÓ VISUALIZAÇÃO OU NÃO
    public boolean visualizacao = false;
//CAMINHO DA IMAGEM
    public String caminhoImagemFundo = null;
    java.awt.Toolkit tk = java.awt.Toolkit.getDefaultToolkit();
    java.awt.Dimension screenSize = tk.getScreenSize();

    /** Creates new form frmMenu */
    public frmMenuTESTE() {
        initComponents();
//==============================================================================
        Toolkit kit = Toolkit.getDefaultToolkit();
        Image img = kit.getImage("Livro24x24.png");
        setIconImage(img);

        //Seta o Look And Feel padrão
        try {
            try {
                javax.swing.UIManager.setLookAndFeel(LF());
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Aviso", ex.getMessage(), JOptionPane.WARNING_MESSAGE);
            }
            javax.swing.SwingUtilities.updateComponentTreeUI(this);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Aviso", ex.getMessage(), JOptionPane.WARNING_MESSAGE);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktopPane = new javax.swing.JDesktopPane();
        menuBar = new javax.swing.JMenuBar();
        MenuCadastro = new javax.swing.JMenu();
        MenuCadBairros = new javax.swing.JMenuItem();
        MenuConfig = new javax.swing.JMenu();
        MenuConfigImagemdeFundo = new javax.swing.JMenuItem();
        MenuAjuda = new javax.swing.JMenu();
        MenuAjudaConteudo = new javax.swing.JMenuItem();
        MenuAjudaSobreoSistema = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TESTE");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        MenuCadastro.setText("Cadastros");

        MenuCadBairros.setText("Bairros");
        MenuCadBairros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuCadBairrosActionPerformed(evt);
            }
        });
        MenuCadastro.add(MenuCadBairros);

        menuBar.add(MenuCadastro);

        MenuConfig.setText("Configurações");

        MenuConfigImagemdeFundo.setText("Imagem de Fundo do Menu");
        MenuConfigImagemdeFundo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuConfigImagemdeFundoActionPerformed(evt);
            }
        });
        MenuConfig.add(MenuConfigImagemdeFundo);

        menuBar.add(MenuConfig);

        MenuAjuda.setText("Ajuda");

        MenuAjudaConteudo.setText("PRESS");
        MenuAjudaConteudo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuAjudaConteudoActionPerformed(evt);
            }
        });
        MenuAjuda.add(MenuAjudaConteudo);

        MenuAjudaSobreoSistema.setText("Sobre o Sistema...");
        MenuAjudaSobreoSistema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuAjudaSobreoSistemaActionPerformed(evt);
            }
        });
        MenuAjuda.add(MenuAjudaSobreoSistema);

        menuBar.add(MenuAjuda);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 520, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
        );

        setBounds(0, 0, 536, 405);
    }// </editor-fold>//GEN-END:initComponents

//Abrir tela InternalFrame
    public void abrirTela(Class classe) {

        //Verificando se a janela está aberta.
        for (int i = 0; i < this.desktopPane.getAllFrames().length; i++) {
            if (this.desktopPane.getAllFrames()[i].getClass().getName().equals(
                    classe.getName())) {
                this.desktopPane.getAllFrames()[i].toFront();
                return;
            }
        }
        JInternalFrame iFrame;
        try {
            iFrame = ((JInternalFrame) classe.newInstance());
            this.desktopPane.add(iFrame);
            iFrame.show();
            iFrame.setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/Icones/Livro24x24.png")));
        } catch (IllegalAccessException ex) {
            ex.printStackTrace();
        } catch (InstantiationException ex) {
            ex.printStackTrace();
        }
        //Seta o Look And Feel padrão
        try {
            try {
                javax.swing.UIManager.setLookAndFeel(LF());
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Aviso", ex.getMessage(), JOptionPane.WARNING_MESSAGE);
            }
            javax.swing.SwingUtilities.updateComponentTreeUI(this);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Aviso", ex.getMessage(), JOptionPane.WARNING_MESSAGE);
        }
    }

    //Ler arquivo texto da Aparência
    //Ler arquivo texto
    private String LF() {
        String look = null;
        try {
            FileReader reader = new FileReader(new File("look.txt"));
            BufferedReader leitor = new BufferedReader(reader);
            //Lê linha por linha \n quebra a linha
            look = leitor.readLine();
            //Fecha a leitura
            reader.close();
            leitor.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Atenção", JOptionPane.WARNING_MESSAGE);
        }
        return look;
    }

    //Ler arquivo texto
    private String CaminhodoRelatorio() {
        String caminho = null;
        try {
            FileReader reader = new FileReader(new File("config.txt"));
            BufferedReader leitor = new BufferedReader(reader);

            //Lê linha por linha \n quebra a linha
            leitor.readLine().substring(8);
            leitor.readLine().substring(12);
            caminho = leitor.readLine().substring(12);

            //Fecha a leitura
            reader.close();
            leitor.close();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Atenção", JOptionPane.WARNING_MESSAGE);
        }
        return caminho;
    }

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        //Menu maximizado
        setExtendedState(MAXIMIZED_BOTH);
//        //////Mostra a imagem de fundo caso haja================================
        try {
//            if (visualizacao == false) {
                imagemFundo = new ImageIcon("Imagem.jpg").getImage();
                lblImagem.setIcon(new ImageIcon(imagemFundo.getScaledInstance(screenSize.width, screenSize.height - 50, Image.SCALE_DEFAULT)));
                lblImagem.setVisible(true);
                lblImagem.setSize(screenSize.width, screenSize.height - 50);
                desktopPane.add(lblImagem);
                this.repaint();
//            }
////            else {
////                imagemFundo = new ImageIcon(caminhoImagemFundo).getImage();
////                lblImagem.setIcon(new ImageIcon(imagemFundo.getScaledInstance(screenSize.width, screenSize.height - 21, Image.SCALE_DEFAULT)));
////                lblImagem.setVisible(true);
////                lblImagem.setSize(screenSize.width, screenSize.height - 21);
////                desktopPane.add(lblImagem);
////                this.repaint();
////            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Imagem não encontrada!\n" + e.getMessage(), "Aviso", JOptionPane.WARNING_MESSAGE);
        }
//==============================================================================

    }//GEN-LAST:event_formWindowOpened

    private void MenuAjudaSobreoSistemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuAjudaSobreoSistemaActionPerformed
        abrirTela(new ifrmSobreoSistema().getClass());
    }//GEN-LAST:event_MenuAjudaSobreoSistemaActionPerformed

    private void MenuCadBairrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuCadBairrosActionPerformed
//
    }//GEN-LAST:event_MenuCadBairrosActionPerformed

    private void MenuConfigImagemdeFundoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuConfigImagemdeFundoActionPerformed
        abrirTela(new ifrmImagemdeFundo().getClass());      
        //////Mostra a imagem de fundo caso haja================================
//        try {
//            if (visualizacao == false) {
//                imagemFundo = new ImageIcon("Imagem.jpg").getImage();
//                lblImagem.setSize(screenSize.width, screenSize.height-21);
//                lblImagem.setIcon(new ImageIcon(imagemFundo.getScaledInstance(screenSize.width, screenSize.height-21, Image.SCALE_DEFAULT)));
//                lblImagem.setVisible(true);
//                desktopPane.add(lblImagem);
//                desktopPane.repaint();
//            }
//             if (visualizacao == true) {
////                iFundo.setVisible(false);
////                iFundo.dispose();
//                imagemFundo = new ImageIcon(caminhoImagemFundo).getImage();
//                lblImagem.setSize(screenSize.width, screenSize.height-21);
//                lblImagem.setIcon(new ImageIcon(imagemFundo.getScaledInstance(screenSize.width, screenSize.height-21, Image.SCALE_DEFAULT)));
//                lblImagem.setVisible(true);
//                desktopPane.add(lblImagem);
//                desktopPane.repaint();
//            }
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, "Imagem não encontrada!\n" + e.getMessage(), "Aviso", JOptionPane.WARNING_MESSAGE);
//        }
//==============================================================================
    }//GEN-LAST:event_MenuConfigImagemdeFundoActionPerformed

    private void MenuAjudaConteudoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuAjudaConteudoActionPerformed
    //
    }//GEN-LAST:event_MenuAjudaConteudoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new frmMenuTESTE().setVisible(true);

            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu MenuAjuda;
    private javax.swing.JMenuItem MenuAjudaConteudo;
    private javax.swing.JMenuItem MenuAjudaSobreoSistema;
    private javax.swing.JMenuItem MenuCadBairros;
    private javax.swing.JMenu MenuCadastro;
    private javax.swing.JMenu MenuConfig;
    private javax.swing.JMenuItem MenuConfigImagemdeFundo;
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JMenuBar menuBar;
    // End of variables declaration//GEN-END:variables
}
