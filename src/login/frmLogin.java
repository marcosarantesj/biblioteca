/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * frmLogin.java
 *
 * Created on 16/08/2010, 04:23:46
 */
package login;

import java.security.NoSuchAlgorithmException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import Classes.DB;
import Classes.Query;
import Classes.util;
import Forms.frmMenu;
import java.awt.AWTKeyStroke;
import java.awt.KeyboardFocusManager;
import java.awt.Toolkit;
import java.awt.event.AWTEventListener;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.HashSet;

/**
 *
 * @author MARK
 */
public class frmLogin extends javax.swing.JFrame {
//Variáveis públicas para serem lidas pelo menu

    public boolean cadlogin1 = false,
            cadniveis = false,
            cadcategoriadoleitor = false,
            cadacervo = false,
            cadautores = false,
            cadbiblioteca = false,
            cadclasliteraria = false,
            cadeditora = false,
            cadgrupo = false,
            cadidioma = false,
            cadestadodeconservacao = false,
            cadleitor = false,
            cadformacaoacademica = false,
            cadniveldeescolaridade = false,
            cadtipodeformacao = false,
            cadcidade = false,
            cadbairro = false,
            movemprestimo = false,
            movdevolucao = false,
            movrenovacao = false,
            movreserva = false,
            relautores = false,
            relclasliterarias = false,
            releditoras = false,
            relgrupos = false,
            relleitores = false,
            relleituras = false,
            relemprestimos = false,
            reltitulosmaislidos = false,
            reltitulosmaisemprestados = false,
            relcarteirinhadoleitor = false,
            reletiquetasdasobras1 = false,
            relobrasdoacervo = false,
            confconfiguracoesgerais = false,
            confbackup = false,
            confrestaurarbackup = false,
            confmudaraparencia = false,
            confimagemdefundodomenu = false,
            ajconteudo = false;

    /** Creates new form frmLogin */
    public frmLogin() {

        //Esse evento captura cada tecla digitada=======================================
        Toolkit.getDefaultToolkit().addAWTEventListener(new AWTEventListener() {

            public void eventDispatched(java.awt.AWTEvent event) {

                if (event instanceof KeyEvent) {
                    //Se pressionar a tecla ESC, executa o comando(fecha o form)
                    KeyEvent kev = (KeyEvent) event;

                    if (kev.getKeyCode() == (KeyEvent.VK_ESCAPE) && kev.getID() == KeyEvent.KEY_PRESSED) {
                        btnCancelarActionPerformed(null);
                    }
                }
            }
        }, java.awt.AWTEvent.KEY_EVENT_MASK);
        //======================================================================

        initComponents();
        // Colocando enter para pular de campo
        HashSet conj = new HashSet(this.getFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS));
        conj.add(AWTKeyStroke.getAWTKeyStroke(KeyEvent.VK_ENTER, 0));
        this.setFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS, conj);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnOK = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtSenha = new javax.swing.JPasswordField();
        txtNome = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        btnOK.setFont(new java.awt.Font("Tahoma", 1, 12));
        btnOK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icones/apply.png"))); // NOI18N
        btnOK.setText("OK");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Tahoma", 1, 12));
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icones/Cancelar.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel1.setText("Nome:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel2.setText("Senha:");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icones/passwordico128x128.png"))); // NOI18N

        txtSenha.setFont(new java.awt.Font("Tahoma", 0, 14));

        txtNome.setFont(new java.awt.Font("Tahoma", 0, 14));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSenha, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                            .addComponent(txtNome, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnOK, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnOK, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-481)/2, (screenSize.height-188)/2, 481, 188);
    }// </editor-fold>//GEN-END:initComponents

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        DB banco = new DB();
        util c = new util();
        banco.connect();
        Query query1 = new Query(banco.conn);
        try {
            query1.open("SELECT nome,senha,nivel_idnivel FROM login1" + " WHERE nome='" + txtNome.getText().trim()
                    + "' AND senha='" + c.criptografaSenha(String.valueOf(txtSenha.getPassword())) + "'");
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(frmLogin.class.getName()).log(Level.SEVERE, null, ex);
        }
        String nome = null, senha = null;
        int idnivel = 0;
        while (query1.next()) {
            nome = query1.fieldbyname("nome");
            senha = query1.fieldbyname("senha");
            idnivel = Integer.parseInt(query1.fieldbyname("nivel_idnivel"));
        }
//Validação de dados------------------------------------------------------------
        if (txtNome.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Digite o nome do usuário !",
                    "Aviso", JOptionPane.INFORMATION_MESSAGE);
            txtNome.requestFocus();
        } else if (txtSenha.getPassword().length == 0) {
            JOptionPane.showMessageDialog(null, "Digite a sua senha !",
                    "Aviso", JOptionPane.INFORMATION_MESSAGE);
            txtSenha.requestFocus();
        }
//------------------------------------------------------------------------------
        if (!txtNome.getText().trim().equals("") && txtSenha.getPassword().length > 0) {
            try {
                if (txtNome.getText().trim().equals(nome) && c.criptografaSenha(String.valueOf(txtSenha.getPassword())).equals(senha)) {
                    //--Lê as permissões do usuário
                    Query query2 = new Query(banco.conn);
                    query2.open("SELECT * FROM permissoes WHERE nivel_idnivel=" + idnivel);

                    while (query2.next()) {
                        try {
                            cadlogin1 = query2.rs.getBoolean("cadlogin1");
                            cadniveis = query2.rs.getBoolean("cadniveis");
                            cadacervo = query2.rs.getBoolean("cadacervo");
                            cadautores = query2.rs.getBoolean("cadautores");
                            cadbiblioteca = query2.rs.getBoolean("cadbiblioteca");
                            cadclasliteraria = query2.rs.getBoolean("cadclasliteraria");
                            cadeditora = query2.rs.getBoolean("cadeditora");
                            cadgrupo = query2.rs.getBoolean("cadgrupo");
                            cadidioma = query2.rs.getBoolean("cadidioma");
                            cadestadodeconservacao = query2.rs.getBoolean("cadestadodeconservacao");
                            cadleitor = query2.rs.getBoolean("cadleitor");
                            cadformacaoacademica = query2.rs.getBoolean("cadformacaoacademica");
                            cadniveldeescolaridade = query2.rs.getBoolean("cadniveldeescolaridade");
                            cadtipodeformacao = query2.rs.getBoolean("cadtipodeformacao");
                            cadcidade = query2.rs.getBoolean("cadcidade");
                            cadbairro = query2.rs.getBoolean("cadbairro");
                            cadcategoriadoleitor = query2.rs.getBoolean("cadcategoriadoleitor");
                            movemprestimo = query2.rs.getBoolean("movemprestimo");
                            movdevolucao = query2.rs.getBoolean("movdevolucao");
                            movrenovacao = query2.rs.getBoolean("movrenovacao");
                            movreserva = query2.rs.getBoolean("movreserva");
                            relautores = query2.rs.getBoolean("relautores");
                            relclasliterarias = query2.rs.getBoolean("relclasliterarias");
                            releditoras = query2.rs.getBoolean("releditoras");
                            relgrupos = query2.rs.getBoolean("relgrupos");
                            relleitores = query2.rs.getBoolean("relleitores");
                            relleituras = query2.rs.getBoolean("relleituras");
                            relemprestimos = query2.rs.getBoolean("relemprestimos");
                            reltitulosmaislidos = query2.rs.getBoolean("reltitulosmaislidos");
                            reltitulosmaisemprestados = query2.rs.getBoolean("reltitulosmaisemprestados");
                            relcarteirinhadoleitor = query2.rs.getBoolean("relcarteirinhadoleitor");
                            reletiquetasdasobras1 = query2.rs.getBoolean("reletiquetasdasobras1");
                            relobrasdoacervo = query2.rs.getBoolean("relobrasdoacervo");
                            confconfiguracoesgerais = query2.rs.getBoolean("confconfiguracoesgerais");
                            confbackup = query2.rs.getBoolean("confbackup");
                            confrestaurarbackup = query2.rs.getBoolean("confrestaurarbackup");
                            confmudaraparencia = query2.rs.getBoolean("confmudaraparencia");
                            confimagemdefundodomenu = query2.rs.getBoolean("confimagemdefundodomenu");
                            ajconteudo = query2.rs.getBoolean("ajconteudo");
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, e.getMessage());
                        }
                    }
                    //Esconde o login
                    this.setVisible(false);
                    //Passa os valores para o menu
                    frmMenu menu = new frmMenu();
                    menu.cadlogin1 = cadlogin1;
                    menu.cadniveis = cadniveis;
                    menu.cadcategoriadoleitor = cadcategoriadoleitor;
                    menu.cadacervo = cadacervo;
                    menu.cadautores = cadautores;
                    menu.cadbiblioteca = cadbiblioteca;
                    menu.cadclasliteraria = cadclasliteraria;
                    menu.cadeditora = cadeditora;
                    menu.cadgrupo = cadgrupo;
                    menu.cadidioma = cadidioma;
                    menu.cadestadodeconservacao = cadestadodeconservacao;
                    menu.cadleitor = cadleitor;
                    menu.cadformacaoacademica = cadformacaoacademica;
                    menu.cadniveldeescolaridade = cadniveldeescolaridade;
                    menu.cadtipodeformacao = cadtipodeformacao;
                    menu.cadcidade = cadcidade;
                    menu.cadbairro = cadbairro;
                    menu.movemprestimo = movemprestimo;
                    menu.movdevolucao = movdevolucao;
                    menu.movrenovacao = movrenovacao;
                    menu.movreserva = movreserva;
                    menu.relautores = relautores;
                    menu.relclasliterarias = relclasliterarias;
                    menu.releditoras = releditoras;
                    menu.relgrupos = relgrupos;
                    menu.relleitores = relleitores;
                    menu.relleituras = relleituras;
                    menu.relemprestimos = relemprestimos;
                    menu.reltitulosmaislidos = reltitulosmaislidos;
                    menu.reltitulosmaisemprestados = reltitulosmaisemprestados;
                    menu.relcarteirinhadoleitor = relcarteirinhadoleitor;
                    menu.reletiquetasdasobras1 = reletiquetasdasobras1;
                    menu.relobrasdoacervo = relobrasdoacervo;
                    menu.confconfiguracoesgerais = confconfiguracoesgerais;
                    menu.confbackup = confbackup;
                    menu.confrestaurarbackup = confrestaurarbackup;
                    menu.confmudaraparencia = confmudaraparencia;
                    menu.confimagemdefundodomenu = confimagemdefundodomenu;
                    menu.ajconteudo = ajconteudo;
                    //Agora mostra o menu
                    menu.setVisible(true);
                } else {
                    JOptionPane.showMessageDialog(null, "Nome/senha incorreto(s) !", "Aviso", JOptionPane.WARNING_MESSAGE);
                    txtNome.requestFocus();
                }
            } catch (NoSuchAlgorithmException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage(), "Aviso", JOptionPane.WARNING_MESSAGE);
            }
        }
        banco.disconnect();
    }//GEN-LAST:event_btnOKActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        //Fecha o programa
        System.exit(0);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        //----------------------------------------------------------------------
        //Criar tabela no BD para verificar qual o Sistema Operacional
        //De acordo com o SO verificar nas seguintes pastas se o arquivo
        //está presente
        String c1 = "C:\\Windows\\";
        String c2 = "C:\\Windows\\system\\";
        String c3 = "C:\\Windows\\System32\\";

        File arq1 = new File(c1 + "vldc");
        File arq2 = new File(c2 + "vldc");
        File arq3 = new File(c3 + "vldc");

        if (!arq1.exists() || !arq2.exists() || !arq3.exists()) {
            JOptionPane.showMessageDialog(null, "O sistema não foi registrado!\n "
                    + "Contate o desenvolvedor para registrar o sistema.", "Aviso", JOptionPane.WARNING_MESSAGE);
            System.exit(0);
        }
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new frmLogin().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnOK;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField txtNome;
    private javax.swing.JPasswordField txtSenha;
    // End of variables declaration//GEN-END:variables
}
